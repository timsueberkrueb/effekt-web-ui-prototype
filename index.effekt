module index

import stringbuffer

effect render(): Unit

extern type State[T]

def main() = {
  mount("app"){view}
}

def view(): String  =
  with val counter = state(0)

  val up = button("+") {
    counter.set(counter.get + 1)
  }

  val down = button("-") {
    counter.set(counter.get - 1)
  }

  s"<p>${counter.get.show}</p>${up}${down}"

def mount(rootId: String){app: => String}: Unit = {
  internal::installRender(rootId){app};
  internal::render()
}

def button(label: String){ onClick: => Unit / render }: String = {
  val handlerId = handler { onClick };
  s"<button onclick='window.$index.__handlers[${handlerId.show}]()'>${label}</button>"
}

def state[T, R](init: T){p: State[T] => R}: R = {
  val id = internal::installState(init)
  p(id)
}

extern def get[T](id: State[T]): T =
  jsWeb """(function(id){ return window.$index.__state[id]; })(${id})"""

def set[T](id: State[T], value: T): Unit / render = {
  internal::jsSetState(id, value);
  do render()
}

def handler {f: => Unit / render}: Int = {
  with internal::installHandler
  try {
    f()
  } with render {
    internal::render()
  }
}

namespace internal {
  private extern def installRender(rootId: String){app: => String}: Unit =
    jsWeb """(function(id, app) {
        window.$index = window.$index || {};
        window.$index.rerender = function () {
          window.$index.__cursor = 0;

          var html = RUN_TOPLEVEL(app);
          var el = document.getElementById(id);
          if (!el.__mounted) { el.innerHTML = html; el.__mounted = true; return; }

          var newEl = document.createElement('div');
          newEl.id = id;
          newEl.innerHTML = html;
          morphdom(el, newEl);
        };
      })(${rootId}, ${box app})
    """

  private extern def render(): Unit =
    jsWeb "window.$index.rerender()"

  private extern def jsSetState[T](id: State[T], value: T): Unit =
    jsWeb """(function(id, value){ window.$index.__state[id] = value; })(${id}, ${value})"""

  private extern def installState[T](init: T): State[T] =
    jsWeb """(function(init) {
        window.$index = window.$index || {};
        window.$index.__state  = window.$index.__state  || [];
        window.$index.__cursor = (typeof window.$index.__cursor === 'number') ? window.$index.__cursor : 0;

        var i = window.$index.__cursor;
        if (typeof window.$index.__state[i] === 'undefined') {
          window.$index.__state[i] = init;
        }
        window.$index.__cursor = i + 1;
        return i;
      })(${init})
    """

  private extern def installHandler{f: => Unit}: Int =
    jsWeb """(function(f) {
        window.$index = window.$index || {};
        window.$index.__handlers = window.$index.__handlers || [];
        var id = window.$index.__handlers.length;
        window.$index.__handlers.push(function (){ RUN_TOPLEVEL(f) });
        return id;
      })(${box f})
    """
}
